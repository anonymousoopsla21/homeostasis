//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> OmpPragma()
 * f1 -> <DECLARE>
 * f2 -> <REDUCTION>
 * f3 -> "("
 * f4 -> ReductionOp()
 * f5 -> ":"
 * f6 -> ReductionTypeList()
 * f7 -> ":"
 * f8 -> Expression()
 * f9 -> ")"
 * f10 -> ( InitializerClause() )?
 * f11 -> OmpEol()
 */
public class DeclareReductionDirective implements Node {
   public OmpPragma f0;
   public NodeToken f1;
   public NodeToken f2;
   public NodeToken f3;
   public ReductionOp f4;
   public NodeToken f5;
   public ReductionTypeList f6;
   public NodeToken f7;
   public Expression f8;
   public NodeToken f9;
   public NodeOptional f10;
   public OmpEol f11;

   public DeclareReductionDirective(OmpPragma n0, NodeToken n1, NodeToken n2, NodeToken n3, ReductionOp n4, NodeToken n5, ReductionTypeList n6, NodeToken n7, Expression n8, NodeToken n9, NodeOptional n10, OmpEol n11) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
      f8 = n8;
      f9 = n9;
      f10 = n10;
      f11 = n11;
   }

   public DeclareReductionDirective(OmpPragma n0, ReductionOp n1, ReductionTypeList n2, Expression n3, NodeOptional n4, OmpEol n5) {
      f0 = n0;
      f1 = new NodeToken("declare");
      f2 = new NodeToken("reduction");
      f3 = new NodeToken("(");
      f4 = n1;
      f5 = new NodeToken(":");
      f6 = n2;
      f7 = new NodeToken(":");
      f8 = n3;
      f9 = new NodeToken(")");
      f10 = n4;
      f11 = n5;
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

