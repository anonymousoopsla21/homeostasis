//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> ( <OP_INCR> | <OP_DECR> ) <IDENTIFIER>
 *       | <IDENTIFIER> ( <OP_INCR> | <OP_DECR> )
 *       | <IDENTIFIER> ( <OP_ADDASS> | <OP_SUBASS> ) Expression()
 *       | <IDENTIFIER> <OP_ASS> ( <IDENTIFIER> ( <OP_ADD> | <OP_SUB> ) AdditiveExpression() | MultiplicativeExpression() <OP_ADD> <IDENTIFIER> )
 */
public class OmpForReinitExpression implements Node {
   public NodeChoice f0;

   public OmpForReinitExpression(NodeChoice n0) {
      f0 = n0;
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

